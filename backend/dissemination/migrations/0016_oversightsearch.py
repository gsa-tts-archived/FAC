# Generated by Django 5.0.1 on 2024-02-29 03:45

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("dissemination", "0015_merge_20240220_0701"),
    ]

    operations = [
        migrations.CreateModel(
            name="OversightSearch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "federal_agency_prefix",
                    models.TextField(verbose_name="2-char code refers to an agency"),
                ),
                (
                    "federal_award_extension",
                    models.TextField(
                        verbose_name="3-digit extn for a program defined by the agency"
                    ),
                ),
                (
                    "findings_count",
                    models.IntegerField(
                        help_text="Data sources: SF-SAC 2013-2015: III/6/k; SF-SAC 2016-2018: III/1/c; SF-SAC 2019-2021: III/1/c; SF-SAC 2022: III/1/c Census mapping: CFDA INFO, FINDINGSCOUNT",
                        verbose_name="Number of findings for the federal program (only available for audit years 2013 and beyond)",
                    ),
                ),
                (
                    "is_direct",
                    models.TextField(
                        help_text="Data sources: SF-SAC 2001-2003: III/10/e; SF-SAC 2004-2007: III/9/f; SF-SAC 2008-2009: III/9/f; SF-SAC 2010-2012: III/9/g; SF-SAC 2013-2015: III/6/h; SF-SAC 2016-2018: II/1/k; SF-SAC 2019-2021: II/1/k; SF-SAC 2022: II/1/k Census mapping: CFDA INFO, DIRECT",
                        verbose_name="Indicate whether or not the award was received directly from a Federal awarding agency",
                    ),
                ),
                (
                    "is_major",
                    models.TextField(
                        help_text="Data sources: SF-SAC 1997-2000: III/7/a; SF-SAC 2001-2003: III/10/f; SF-SAC 2004-2007: III/9/g; SF-SAC 2008-2009: III/9/g; SF-SAC 2010-2012: III/9/h; SF-SAC 2013-2015: III/6/i; SF-SAC 2016-2018: III/1/a; SF-SAC 2019-2021: III/1/a; SF-SAC 2022: III/1/a Census mapping: CFDA INFO, MAJORPROGRAM",
                        verbose_name="Indicate whether or not the Federal program is a major program",
                    ),
                ),
                (
                    "is_material_weakness",
                    models.TextField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/h; SF-SAC 2016-2018: III/4/i; SF-SAC 2019-2021: III/4/i; SF-SAC 2022: III/4/i Census mapping: FINDINGS, MATERIALWEAKNESS",
                        verbose_name="Material Weakness finding",
                    ),
                ),
                (
                    "is_modified_opinion",
                    models.TextField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/f; SF-SAC 2016-2018: III/4/g; SF-SAC 2019-2021: III/4/g; SF-SAC 2022: III/4/g Census mapping: FINDINGS, MODIFIEDOPINION",
                        verbose_name="Modified Opinion finding",
                    ),
                ),
                (
                    "is_other_findings",
                    models.TextField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/j; SF-SAC 2016-2018: III/4/k; SF-SAC 2019-2021: III/4/k; SF-SAC 2022: III/4/k Census mapping: FINDINGS, OTHERFINDINGS",
                        verbose_name="Other findings",
                    ),
                ),
                (
                    "is_other_matters",
                    models.TextField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/g; SF-SAC 2016-2018: III/4/h; SF-SAC 2019-2021: III/4/h; SF-SAC 2022: III/4/h Census mapping: FINDINGS, OTHERNONCOMPLIANCE",
                        verbose_name="Other non-compliance",
                    ),
                ),
                (
                    "is_questioned_costs",
                    models.TextField(
                        help_text="Data sources: SF-SAC 2013-2015: III/7/k; SF-SAC 2016-2018: III/4/l; SF-SAC 2019-2021: III/4/l; SF-SAC 2022: III/4/l Census mapping: FINDINGS, QCOSTS",
                        verbose_name="Questioned Costs",
                    ),
                ),
                (
                    "is_repeat_finding",
                    models.TextField(
                        help_text="Data sources: SF-SAC 2016-2018: III/4/m; SF-SAC 2019-2021: III/4/m; SF-SAC 2022: III/4/m Census mapping: FINDINGS, REPEATFINDING",
                        verbose_name="Indicates whether or not the audit finding was a repeat of an audit finding in the immediate prior audit",
                    ),
                ),
                (
                    "is_significant_deficiency",
                    models.TextField(
                        help_text="Data sources: SF-SAC 1997-2000: II/3; SF-SAC 2001-2003: II/3; SF-SAC 2004-2007: II/3; SF-SAC 2008-2009: II/3; SF-SAC 2010-2012: II/3; SF-SAC 2013-2015: II/3; SF-SAC 2016-2018: III/2/c; SF-SAC 2019-2021: III/2/c; SF-SAC 2022: III/2/c Census mapping: FINDINGS, SIGNIFICANTDEFICIENCY",
                        verbose_name="Significant Deficiency finding",
                    ),
                ),
                (
                    "report_id",
                    models.ForeignKey(
                        db_column="report_id",
                        help_text="GSAFAC generated identifier",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dissemination.general",
                        to_field="report_id",
                    ),
                ),
            ],
        ),
    ]
